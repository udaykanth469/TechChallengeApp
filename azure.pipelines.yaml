trigger: # trigger the pipeline for any changes to repo on master branch.
  batch: true 
  branches:
    include:
      - master 

pr: none

variables:
 
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build Stage
  jobs:  
  - job: BuildAndPush
    displayName: Build and Push Image
    pool:
      vmImage: $(vmImageName) # get latest ubuntu image from microsoft hosted pipelines"
    steps:    
    - task: Bash@3 # Bash script to export env variable "version" with git command output
      displayName: 'GetTag'
      inputs:
        targetType: 'inline'
        script: |
         echo "##vso[task.setvariable variable=version;]$(git describe --tags)"
         echo "##vso[task.setvariable variable=tag;]$(git tag | sort -V | tail -1 | cut -b 3-7)"
      enabled: true
    - task: Docker@2 # build and push docker image to ACR
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(repository)
        dockerfile: '**/Dockerfile'
        containerRegistry: '$(containerRegistry)'
        tags: |
          $(version)
    - task: FileTransform@1 # maps the data with env variables during build
      displayName: 'File Transform: '
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/terraform'
        fileType: json
        targetFiles: secrets.tfvars.json

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0 # installs the prefered version
      displayName: 'Install Terraform 0.12.3'

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0 # initialize the project
      displayName: 'Terraform : init'
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        backendServiceArm: techappconnection
        backendAzureRmResourceGroupName: techapp
        backendAzureRmStorageAccountName: techterraform
        backendAzureRmContainerName: techcontainer
        backendAzureRmKey: 'terra-state'

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0 # plan the terraform
      displayName: 'Terraform : plan'
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        command: plan
        commandOptions: '-var-file=secrets.tfvars.json'
        environmentServiceNameAzureRM: techappconnection

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0 #apply the changes if any
      displayName: 'Terraform : apply'
      inputs:
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        command: apply
        commandOptions: '-var-file=secrets.tfvars.json'
        environmentServiceNameAzureRM: techappconnection 
    - task: replacetokens@3 # replacing the tags using "version" variable
      displayName: Replace tokens in k8s manifest files
      inputs:
        rootDirectory: 'k8s'
        targetFiles: 'webapp.yaml'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
      enabled: true
    - task: Kubernetes@1 # applying deployments to cluster
      displayName: Deploying k8s manifests
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'techappcluster'
        namespace: 'default'
        command: apply  
        useConfigurationFile: true
        configuration: 'k8s/webapp.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        outputFormat: 'yaml'
      enabled: true    
    - task: yrtimid.semver-bump-task.semver-bump-task.semver-bump@1
      displayName: 'Semver bump minor version'
      inputs:
        VersionVariable: tag
        IncrementLevel: minor
    - task: GitHubRelease@1
      displayName: 'GitHub release (create)'
      inputs:
        gitHubConnection: 'GitHub connection 1'
        action: 'create'
        tagSource: userSpecifiedTag
        tag: 'v.$(tag)'
        releaseNotesSource: inline
        releaseNotesInline: 'version to bump'
        addChangeLog: false